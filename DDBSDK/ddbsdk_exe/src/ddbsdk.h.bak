#ifndef DDBSDK_H
#define DDBSDK_H


#include <winioctl.h>

#define DDBSDK_VERSION   0x00000400


#define FILE_DEVICE_DDBSDK					0x00001000

#define IOCTL_DDBSDK_RECONFIGURE			CTL_CODE(FILE_DEVICE_DDBSDK, 0x0011, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_VERSIONINFO			CTL_CODE(FILE_DEVICE_DDBSDK, 0x0012, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_OPEN_DMBDEVICE			CTL_CODE(FILE_DEVICE_DDBSDK, 0x0013, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_CLOSE_DMBDEVICE		CTL_CODE(FILE_DEVICE_DDBSDK, 0x0014, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_DMBSIGNAL_QUALITY				CTL_CODE(FILE_DEVICE_DDBSDK, 0x0015, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define IOCTL_DDBSDK_LIST_DATAPROGRAM		CTL_CODE(FILE_DEVICE_DDBSDK, 0x0020, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_OPEN_DATA_XXXX			CTL_CODE(FILE_DEVICE_DDBSDK, 0x0021, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_GET_DATA_XXXX			CTL_CODE(FILE_DEVICE_DDBSDK, 0x0022, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_CLOSE_DATA_XXXX		CTL_CODE(FILE_DEVICE_DDBSDK, 0x0023, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define IOCTL_DDBSDK_LIST_VIDEOPROGRAM		CTL_CODE(FILE_DEVICE_DDBSDK, 0x0030, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_OPEN_VIDEO				CTL_CODE(FILE_DEVICE_DDBSDK, 0x0031, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_GET_VIDEO_ONEFRAMEVIDEO	CTL_CODE(FILE_DEVICE_DDBSDK, 0x0033, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_GET_VIDEO_ONEFRAMEAUDIO	CTL_CODE(FILE_DEVICE_DDBSDK, 0x0034, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_GET_VIDEO_PCR				CTL_CODE(FILE_DEVICE_DDBSDK, 0x0035, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_CLOSE_VIDEO				CTL_CODE(FILE_DEVICE_DDBSDK, 0x0036, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_CHANGE_VIDEO_CHAL			CTL_CODE(FILE_DEVICE_DDBSDK, 0x0037, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define IOCTL_DDBSDK_LIST_MUSICAMPROGRAM	CTL_CODE(FILE_DEVICE_DDBSDK, 0x0040, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_OPEN_MUSICAM		CTL_CODE(FILE_DEVICE_DDBSDK, 0x0041, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_GET_MUSICAM_DATA	CTL_CODE(FILE_DEVICE_DDBSDK, 0x0042, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_CLOSE_MUSICAM		CTL_CODE(FILE_DEVICE_DDBSDK, 0x0043, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_CHANGE_MUSICAM_CHAL		CTL_CODE(FILE_DEVICE_DDBSDK, 0x0044, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define IOCTL_DDBSDK_OPEN_DATA_FINANCE	CTL_CODE(FILE_DEVICE_DDBSDK, 0x0051, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_GET_DATA_FINANCE	CTL_CODE(FILE_DEVICE_DDBSDK, 0x0052, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_CLOSE_DATA_FINANCE	CTL_CODE(FILE_DEVICE_DDBSDK, 0x0053, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define IOCTL_DDBSDK_OPEN_DATA_TRAFFIC	CTL_CODE(FILE_DEVICE_DDBSDK, 0x0061, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_GET_DATA_TRAFFIC	CTL_CODE(FILE_DEVICE_DDBSDK, 0x0062, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_CLOSE_DATA_TRAFFIC	CTL_CODE(FILE_DEVICE_DDBSDK, 0x0063, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define IOCTL_DDBSDK_OPEN_DATA_WEATHER	CTL_CODE(FILE_DEVICE_DDBSDK, 0x0071, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_GET_DATA_WEATHER	CTL_CODE(FILE_DEVICE_DDBSDK, 0x0072, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_CLOSE_DATA_WEATHER	CTL_CODE(FILE_DEVICE_DDBSDK, 0x0073, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define IOCTL_DDBSDK_OPEN_DATA_PIOINFO	CTL_CODE(FILE_DEVICE_DDBSDK, 0x0081, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_GET_DATA_PIOINFO	CTL_CODE(FILE_DEVICE_DDBSDK, 0x0082, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_CLOSE_DATA_PIOINFO	CTL_CODE(FILE_DEVICE_DDBSDK, 0x0083, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define IOCTL_DDBSDK_LIST_DATA_DOWNLOADINGFILESTATUS		CTL_CODE(FILE_DEVICE_DDBSDK, 0x0091, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_GET_DATA_ONEFILEINFO					CTL_CODE(FILE_DEVICE_DDBSDK, 0x0092, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_OPEN_DATA_DOWNLOADFILE					CTL_CODE(FILE_DEVICE_DDBSDK, 0x0093, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_CLOSE_DATA_DOWNLOADFILE				CTL_CODE(FILE_DEVICE_DDBSDK, 0x0094, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_GETONEDATABLOCK_FINISHEDFILE_OPEN		CTL_CODE(FILE_DEVICE_DDBSDK, 0x0095, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_GETONEDATABLOCK_FINISHEDFILE			CTL_CODE(FILE_DEVICE_DDBSDK, 0x0096, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_GETONEDATABLOCK_FINISHEDFILE_CLOSE		CTL_CODE(FILE_DEVICE_DDBSDK, 0x0097, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_GET_ONE_FINISHEDFILE					CTL_CODE(FILE_DEVICE_DDBSDK, 0x0098, METHOD_BUFFERED, FILE_ANY_ACCESS)

/* this ioctl macro is only used for software test */
#define IOCTL_DDBSDK_FILEINPUT_TEST		CTL_CODE(FILE_DEVICE_DDBSDK, 0x00a1, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_SET_FILEINPUT_TEST_MODE	CTL_CODE(FILE_DEVICE_DDBSDK, 0x00a2, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DDBSDK_CANCEL_FILEINPUT_TEST_MODE	CTL_CODE(FILE_DEVICE_DDBSDK, 0x00a3, METHOD_BUFFERED, FILE_ANY_ACCESS)

/* data typedef  */
#define u8   unsigned char 
#define u16  unsigned short
#define u32  unsigned int
#define s8   signed char
#define s16  signed short
#define s32  signed int
#define s64  __int64
#define u64  unsigned __int64

/* 设置存放DDBSDK .dll, CAFILE, 及其它下载文件的路径 */
#define DDBSDK_MAINPATH_DEFAULT    "\\MMC_Storage"
#define DDBSDK_MAINPATH_NAME       "\\ddbsdk"

/*************/

#define  PIDGOT(TSBUF)  (((TSBUF[1]) & 0x1f) << 8) | ((TSBUF[2]) & 0xFF)

#define   ODD_KEY    0x3
#define   EVEN_KEY   0x2
#define SWAP(TSBUF)  ((TSBUF[3] << 24) | (TSBUF[2] << 16) | (TSBUF[1] << 8) | TSBUF[0])

typedef struct _TSHEADER_INFO_
{
	unsigned sync_byte:         8;

	unsigned pid_5:             5;
	unsigned transport_piority: 1;
	unsigned start_indicator:   1;
	unsigned error_indicator:   1;

	unsigned pid_8:              8;

	unsigned continue_counter:   4;
	unsigned adaptation_control: 2;
	unsigned scrambling_control: 2;

} TsHeader_t;

enum {
	DDB_MUSICAM_CLASSIC947,
	DDB_MUSICAM_ENEWS,
	DDB_DATA,
	DDB_VIDEO_FIRSTFINANCE,
	DDB_VIDEO_CCTV5,
	DDB_MUSICAM_TRAFFIC
};

typedef struct ddbsdk_versionInfo_s ddbsdk_versionInfo_t;

#define  MAX_DATA_PROGRAM_NUM   10
#define  MAX_VIDEO_PROGRAM_NUM  5
#define  MAX_MUSICAM_PROGRAM_NUM  5
typedef struct _DDBSDK_
{
	unsigned finance_open: 1;
	unsigned pioinfo_open: 1;
	unsigned traffic_open: 1;
	unsigned weather_open: 1;
	unsigned sysfile_open: 1;
	unsigned filedown_open: 1;
	unsigned device_open:   1;
	unsigned serviceFile_open:  1;

	unsigned service_lock_flag: 1;   /* locked to only surpport one service at the same time */
	unsigned testInSMGLabFlag:  1;
	unsigned musicam_open:      1;
	unsigned pat_open:          1;
	unsigned pmt_open:          1;
	unsigned cat_open:          1;
	unsigned video_open:        1;
	unsigned videoScene_open:   1;

	unsigned videoOdr_open:     1;
	unsigned tdt_open:          1;
	unsigned ca_init_ok:        1;
	unsigned test_file_mode:    1;
	unsigned reserved:          4;

	HANDLE  hFinance;
	HANDLE  hTraffic;
	HANDLE  hWeather;
	HANDLE  hDownloadFile;
	HANDLE  hPIOInfo;
	HANDLE  hSysFile;
	HANDLE  hServiceFile;
	HANDLE  hMusicam;
	HANDLE  hPAT;
	HANDLE  hPMT;
	HANDLE  hCAT;
	HANDLE  hDmbVideo;
	HANDLE  hDmbAudio;
	HANDLE  hDmbScene;
	HANDLE  hDmbOdr;
	HANDLE  hTDT;

	int   serviceIndexCur;
	u32   frequency;
	u64   videoProgramPCR;
	u16   pcr_pid;
	u16   mjdDate;
	u32   tdtTime;
	char  ddbsdk_path_main[32];

}ddbsdk_t;


/*
  following data struct used for usrer Application's INTERFACE
*/

/* following used fo ioctl: IOCTL_DDBSDK_RECONFIGURE */
typedef struct ddbsdk_reconfigure_s
{
	unsigned testInSMGLabFlag : 1;
	unsigned reserved : 7;
	u32	   frequency;
	char   ddbsdk_path_main[32];

}ddbsdk_reconfigure_t;

/* following used fo ioctl: IOCTL_DDBSDK_VERSIONINFO */
struct ddbsdk_versionInfo_s
{
	u32    ddbsdk_version;  //举例: 如果是0x00000302意思就是版本0.3.2。
	u32    ca_version;      //举例: 如果是0x01020304意思就是版本1.2.3.4。
	u32    ca_card_no;      //ca 软卡卡号
	char   ca_ManuName[32];     //ca 厂商名
	char   ca_TvsName[32];      //TV 运营商名
	u32    ca_entitleTime;      //time_t格式，从1970年1月1日0时0分0秒计时
	u32    ca_startTime;        //time_t格式，从1970年1月1日0时0分0秒计时
	u32    ca_endTime;          //time_t格式，从1970年1月1日0时0分0秒计时
	u32    ca_productID;        //一般为13
};

/* following used fo ioctl:  
IOCTL_DDBSDK_LIST_DATA_DOWNLOADINGFILESTATUS
IOCTL_DDBSDK_GET_DATA_ONEFILEINFO
IOCTL_DDBSDK_OPEN_DATA_DOWNLOADFILE
IOCTL_DDBSDK_CLOSE_DATA_DOWNLOADFILE
IOCTL_DDBSDK_GETONEDATABLOCK_FINISHEDFILE_OPEN
IOCTL_DDBSDK_GETONEDATABLOCK_FINISHEDFILE
IOCTL_DDBSDK_GETONEDATABLOCK_FINISHEDFILE_CLOSE
*/
enum {
	SYSTEMFILE = 0x00,
	MULTIMEDIAFILE = 0x01,
	ADFILE = 0x02,
	CDMUSICFILE = 0x03,
	NETFILE = 0x04,
	POIFOODFILE = 0x05,
	PROGRAMFILE = 0xfd,
	LISTFILE = 0xfe
};

enum deDataType
{
	Traffic,
	Weather,
	Finance,
	POI,
	DownloadFile
};

#define MAXLISTFILEID   1024
typedef struct ddbsdk_servFileStatus_s
{
	int   numDownloading;
	int   numFinished;
	u32   selectedFILE_TYPE;    /* 列举时应该设置此值 */
	unsigned long   fileID_downing[MAXLISTFILEID];     /* 列举出数据类型为selectedFILE_TYPE的正在下载的文件 */
	unsigned long   fileID_finished[MAXLISTFILEID];    /* 列举出数据类型为selectedFILE_TYPE的下载完成的文件 */

}ddbsdk_servFileStatus_t;

typedef struct ddbsdk_servFileInfo_s
{
	u32   selectedFILE_ID;      /* GET文件数据或文件信息时，设置此值 */
	u32   FILE_LENGTH;
	 u8   FILE_TYPE;
	 u8   Version;
	u16   FILE_VALID_ENDDATE;
	u16   FILE_VALID_ENDTIME;
	u16   Block_length;
	u16   Block_num;

	/* parameter for FILE transfer */
	FILE * file_get;

}ddbsdk_servFileInfo_t;

/* following used fo ioctl:  
IOCTL_DDBSDK_LIST_VIDEOPROGRAM
IOCTL_DDBSDK_OPEN_VIDEO
IOCTL_DDBSDK_GET_VIDEO_ONEFRAMEVIDEO
IOCTL_DDBSDK_GET_VIDEO_ONEFRAMEAUDIO
IOCTL_DDBSDK_GET_VIDEO_PCR
IOCTL_DDBSDK_CLOSE_VIDEO
IOCTL_DDBSDK_CHANGE_VIDEO_CHAL
*/

typedef struct _DDBSDK_AVC_DEC_SPEC_INFO_
{
	u8   configureationVersion; /* 8, =1(const) */
	u8   AVCprofileIndication;  /* 8 */
	u8   profile_compatibility; /* 8 */
	u8   AVClevelIndication;    /* 8 */
	s8   lengthSizeMinusOne;    /* 2 */

	s8    numOfSequenceParameterSets;  /* 5 */
	u16   sequenceParameterLength;    /* 16 */
	u8    sps[32];

	u8    numOfPictureParamterSets;   /* 8 */
	u16   pictureParameterSetLength;    /* 16 */
	u8    pps[32];
}ddbsdk_avcDecoderSpecInfo;

typedef struct _DDBSDK_AAC_DEC_SPEC_INFO_
{
	  s8   audioObjectType;  /* 5 */
	  s8   samplingFrequencyIndex;  /* 4 */
	 s32   samplingFrequency;  /* 24 */
	  s8   channelConfiguration; /* 4 */
	  s8   sbrPresentFlag;
	  s8   extensionAudioObjectType;
	  s8   extensionSamplingFrequencyIndex; /* 4  */
	 s32   extensionSamplingFrequency;  /* 24 */

}ddbsdk_aacDecoderSpecInfo;

#define   MAX_VIDEO_PROGRAM   4
#define   MAX_DATA_PROGRAM    16
typedef struct ddbsdk_videoInfo_s ddbsdk_videoInfo_t;
struct ddbsdk_videoInfo_s
{
	u16   serviceNo;
	u16   ServiceIndex;
	u16   video_pid;
	u16   audio_pid;
	u16   scene_pid;
	u16   odr_pid;
	u16   ecm_pid;
	u16   emm_pid;
	u16   pcr_pid;
	u64   pcr_base;
	char   descr[32];

	ddbsdk_avcDecoderSpecInfo   avcDecInfo;
	ddbsdk_aacDecoderSpecInfo   aacDecInfo;

	ddbsdk_videoInfo_t * next;
};
typedef struct ddbsdk_dmbvideoInfo_s
{
	u32   ServiceNum;
	u32   selectServiceNo;
	ddbsdk_videoInfo_t   videoInfo[MAX_VIDEO_PROGRAM];
	
}ddbsdk_dmbvideoInfo_t;

/* following used fo ioctl:  
IOCTL_DDBSDK_LIST_MUSICAMPROGRAM
IOCTL_DDBSDK_OPEN_MUSICAM
IOCTL_DDBSDK_GET_MUSICAM_DATA
IOCTL_DDBSDK_CLOSE_MUSICAM
IOCTL_DDBSDK_CHANGE_MUSICAM_CHAL
*/
#define   MAX_MUSICAM_PROGRAM   16
typedef struct ddbsdk_musicamInfo_s ddbsdk_musicamInfo_t;
struct ddbsdk_musicamInfo_s
{
	u16   serviceNo;
	u16   ServiceIndex;
	char   descr[32];
	ddbsdk_musicamInfo_t * next;
};
typedef struct ddbsdk_dmbmusicamInfo_s
{
	u32   ServiceNum;
	u32   selectServiceNo;
	ddbsdk_musicamInfo_t   musicamInfo[MAX_MUSICAM_PROGRAM];
	
}ddbsdk_dmbmusicamInfo_t;

/* following used fo ioctl:  
IOCTL_DDBSDK_LIST_DATAPROGRAM
IOCTL_DDBSDK_OPEN_DATA_XXXX
IOCTL_DDBSDK_GET_DATA_XXXX
IOCTL_DDBSDK_CLOSE_DATA_XXXX
*/
typedef struct ddbsdk_dataInfo_s ddbsdk_dataInfo_t;
struct ddbsdk_dataInfo_s
{
	u16   serviceNo;
	u16   ServiceIndex;
	u16   data_pid;
	u16   ecm_pid;
	u16   emm_pid;
	 u8   stream_type;  /*db: traffic, dc: weather, dd: finance,
						de: system file, df: file, e1: PIO, fc: 文件清清单*/
	char   descr[32];
	ddbsdk_dataInfo_t * next;
};
typedef struct ddbsdk_dmbdataInfo_s
{
	u32   ServiceNum;
	u32   selectServiceNo;
	ddbsdk_dataInfo_t   dataInfo[MAX_DATA_PROGRAM];

}ddbsdk_dmbdataInfo_t;

#endif

